import java.awt.BorderLayout;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aaron
 */
public class CurrencyCalc extends javax.swing.JFrame {
// String array that contains all of the countries codes. This is what names each table
// and is also used to open each rss feed, as the url contains these codes
String[] countries = new String[]{"AED","ARS","AUD","AWG","BAM","BBD","BDT","BGN",
"BHD","BMD","BOB","BRL","BSD","CAD","CHF","CLP","CNY","COP","CZK","DKK","EGP","EUR",
"FJD","GBP","GHS","GMD","GTQ","HKD","HRK","HUF","IDR","ILS","INR","ISK","JMD","JOD",
"JPY","KES","KHR","KRW","KWD","LAK","LBP","LKR","LTL","LVL","MAD","MDL","MGA","MKD",
"MUR","MVR","MXN","MYR","NAD","NGN","NOK","NPR","NZD","OMR", "PAB","PEN","PHP","PKR",
"PLN","PYG","QAR","RON","RSD","RUB","SAR","SCR","SEK","SGD","SYP","THB","TND","TRY",
"TWD","UAH","UGX","USD","UYU","VEF","VND","XAF","XCD","XOF","XPF","ZAR"};


//string array to store the country names
String[] cNames = new String[]{"United Arab Emirates","Argentina","Australia","Aruba",
"Bosnia and Herzegovina","Barbados","Bangladesh","Bulgaria","Bahrain","Bermuda","Bolivia",
"Brazil","Bahamas","Canada","Switzerland","Chile","China","Colombia","Czech Republic","Denmark",
"Egypt","Euro","Fiji","United Kingdom","Ghana","Gambia","Guatemala","Hong Kong","Croatia",
"Hungary","Indonesia","Israel","India","Iceland","Jamaica","Jordan","Japan","Kenya","Cambodia",
"South Korea","Kuwait","Laos","Lebanon","Sri Lanka","Lithuania","Latvia","Morocco","Moldova",
"Madagascar","Macedonia","Mauritius","Maldives","Mexico","Malaysia","Namibia","Nigeria",
"Norway","Nepal","New Zealand","Oman","Panama","Peru","Philippines","Pakistan","Poland",
"Paraguay","Qatar","Romania","Serbia","Russia","Saudi Arabia","Seychelles","Sweden","Singapore",
"Syria","Thailand","Tunisia","Turkey","Taiwan","Ukraine","Uganda","United States","Uruguay",
"Venezuela","Vietnam","Central African Franc","East Caribbean Dollar","West African Franc","CFP Franc",
"South Africa"};
    /**
     * Creates new form CurrencyCalc
     */
// static string to set the db to the executing directory, instead of the root
// set static so any class has any access to it
public static String dir;

CurrencyCalc appP;
Double drate;
String dtime;
Date dt;
String curName1, curName2;
    public CurrencyCalc() {
        initComponents();
       
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Currency Converter");

        jLabel2.setText("Currency you have:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Currency to exchange to:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jLabel5.setText("jLabel5");

        jLabel6.setText("Amount:");

        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });

        jLabel7.setText("Result:");

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Update:");

        jMenu1.setText("File");

        jMenuItem1.setText("Refresh Data");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField4))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // action when the first combobox is selected
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // sets label to thhe corresponding country code label
        jLabel1.setText(countries[jComboBox1.getSelectedIndex()]);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // sets label to thhe corresponding country code label
        jLabel5.setText(countries[jComboBox2.getSelectedIndex()]);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    
    
    //calculation button determines the currency conversion rate.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:MM:ss");
        
        //table name used for db look up comes from first combo box
        String tableName = countries[jComboBox1.getSelectedIndex()];
        // ccCode comes from second combo box
        String ccCode = countries[jComboBox2.getSelectedIndex()];
        
        // call method to determine if user entered a valid number
        if (isNumeric(jTextField3.getText())){
        // if a valid number perform calculation
            //convert string to doube value
        Double amount = Double.valueOf(jTextField3.getText());
        Double result;
        // retrieve rate from table
        Double rate = DBRead.getRate(tableName, ccCode);
        drate = rate;
        jLabel8.setText(sdf.format(dt));
        curName1 = DBRead.currencyName1(tableName);
        curName2 = DBRead.currencyName2(tableName, ccCode);
        // calculate rate
        result = (double)Math.round((amount * rate) * 100)/100;
        // display result in textbox
        jTextField4.setText(result.toString());
        jLabel9.setText("One "+ curName1 + " equals");
        jLabel10.setText(rate + " " + curName2);
        }
        else{
            // if user did not enter a valid number display message box
            JOptionPane.showMessageDialog(null, "Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            // reset text fieds
            jTextField3.setText("");
            jTextField4.setText("");
            // set focus back to first text box
            jTextField3.requestFocusInWindow();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        // if user clicks into first text box, clear both text boxes
        jTextField3.setText("");
        jTextField4.setText("");
    }//GEN-LAST:event_jTextField3FocusGained

    //refresh menu item
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // if user selects refresh menu item, refresh the database
        new Thread(new XmlParser(countries, false, appP)).start();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       JFrame fFrame = new JFrame("About team F Currency Converter.");
       fFrame.setLocationRelativeTo(null);
       JPanel apanel = new JPanel();
       fFrame.setSize(400,200); 
       fFrame.getContentPane().add(apanel, BorderLayout.CENTER);
      
       JLabel message = new JLabel();
      
        apanel.add(message);
       
       String smessage = ("<html><body>Team F's Currency Converter is brought to you by<br>"+
               "Aaron Tennant, Roger Joudrey, and Gurpreet Singh.<br>"+
               "Special thanks to http://themoneyconverter.com where<br>" +
               "we were able to get the xml conversion feeds.");
       message.setText(smessage);
       fFrame.add(apanel);
      
       fFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            // declare variable to access method from non static content    
            CurrencyCalc app =  new CurrencyCalc();
                app.setLocationRelativeTo(null);
                app.setVisible(true);
                app.appP = app;
                // run load method
                app.load();
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    // method to determine if a data store is allready present
private void dbCheck(String dir){   //checks to see if the db has been created
   File isdb = new File(dir +"\\myDB"); 
   if (isdb.exists()){
       
       if (DBRead.DBIntegrityCheck(countries)){
           JOptionPane.showMessageDialog(null,"The Database appears to be damaged, please wait create a new one.",
        "Warning",JOptionPane.WARNING_MESSAGE);
           DBRead.DBDelete(countries);
           new Thread(new XmlParser(countries, false, appP)).start();
       }
       else if  (!DBRead.DBIntegrityCheck(countries)){  
       // if db files exists check for the date tables were loaded.
       // if less then 24 hours old prompt to load again
      
       Boolean refresh = dbDateCheck();
       int c=0;
        if (!refresh){
       c = JOptionPane.showConfirmDialog(null, "The currecncy information is less than 24 hours old.\n"
                   + "Do you want to update anyway?", "Question", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
       // if user selects yes, update the tables
       if (c==0){
           new Thread(new XmlParser(countries, false, appP)).start();
       }
       }
       // if dates are older than 24 hours, update tables
       else if (refresh){     
       new Thread(new XmlParser(countries, false, appP)).start();
       }
   }
   }
   
   
   else{// if it does not exist run the DB create class to create DB
      // show message box informing that a db does not exist
     JOptionPane.showMessageDialog(null,"A Database does not exist, please wait for the database to be created",
        "Warning",JOptionPane.WARNING_MESSAGE);
       new DBCreate(countries, dir, appP);
   }
}

private void load(){
    // set the comboxes to new model based off of the countries names array
   DefaultComboBoxModel dcbm = new DefaultComboBoxModel(cNames);
   DefaultComboBoxModel dcbm2 = new DefaultComboBoxModel(cNames);
   //set model for first combo box
   jComboBox1.setModel(dcbm);
   // set default on first box to US dollars
   jComboBox1.setSelectedIndex(81);
   // set model to second combo box
   jComboBox2.setModel(dcbm2);
   // set lables to corresponding comboboxes
   jLabel1.setText(countries[jComboBox1.getSelectedIndex()]);
   jLabel5.setText(countries[jComboBox2.getSelectedIndex()]);
   // ensure system property is set to check for databases
   dir = System.getProperty("user.dir");
   
   // run method to check if DB files exist
   dbCheck(dir);
}


// method to check for dates
private Boolean dbDateCheck(){
    Boolean b;
    // get current time
    Calendar now = Calendar.getInstance();
    // convert to mili seconds for math differential
    long current = now.getTimeInMillis();
   // run method to to get the date of the last updated table update
    long rtime = DBRead.getLastUpdate();
    dt = new Date(rtime);
    /// find the number of hours between the table load dates and the current date
    long hours =  TimeUnit.MILLISECONDS.toHours(current-rtime);
    // if less then 24 set boolean to false
    if (hours < 24){
        b =false;
    }
    // if over 24 set to true
    else b = true;
    
    return b;
}

 // method to check to see if user input is a number or if contains invalid characters
 public static boolean isNumeric(String s){
        return s.matches("[-+]?\\d*\\.?\\d+");
          
    }

}
